#pragma once

#include "drivers/display/vga3.hpp"
#include "utilities/macros.hpp"

using namespace drivers::display;

/**
 * In debug mode, if the condition is not met, assert prints a message
 * indicating the location of assertion and then enters an infinite loop.
 */
#ifndef NDEBUG
#define assertm(condition, message)                         \
    if (!(condition)) {                                     \
        Vga3::print("ASSERTION: ", Vga3::Color::LIGHT_RED); \
        Vga3::print(__FILE__ ":");                          \
        Vga3::print(__PRETTY_FUNCTION__);                   \
        Vga3::print(":" STRINGIZE(__LINE__));               \
        if (message && *message) {                          \
            Vga3::print(": ");                              \
            Vga3::print(message);                           \
        }                                                   \
        Vga3::print("\n");                                  \
        while (true) {                                      \
        }                                                   \
    }
#else
#define assertm(condition, message) \
    do {                            \
    } while (0)
#endif

#define assert(condition) assertm(condition, "")
