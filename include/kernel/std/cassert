#pragma once

#include "drivers/display/vga3.hpp"
#include "utilities/macros.hpp"

/**
 * In debug mode, if the condition is not met, assert prints a message
 * indicating the location of assertion and then enters an infinite loop.
 */
#ifndef NDEBUG
#define assertm(condition, message)                                   \
    if (!(condition)) {                                               \
        drivers::display::vga3::print(                                \
            "ASSERTION: ", drivers::display::vga3::Color::LIGHT_RED); \
        drivers::display::vga3::print(__FILE__ ":");                  \
        drivers::display::vga3::print(__PRETTY_FUNCTION__);           \
        drivers::display::vga3::print(":" STRINGIZE(__LINE__));       \
        if (message && *message) {                                    \
            drivers::display::vga3::print(": ");                      \
            drivers::display::vga3::print(message);                   \
        }                                                             \
        drivers::display::vga3::print("\n");                          \
        while (true) {                                                \
        }                                                             \
    }
#else
#define assertm(condition, message) \
    do {                            \
    } while (0)
#endif

#define assert(condition) assertm(condition, "")
