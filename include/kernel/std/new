#pragma once

#include <stddef.h>

/**
 * Allocate space for an array of objects with given size.
 *
 * @param count The size of the entire array in bytes.
 * @return Pointer to allocated space.
 */
void* operator new[](size_t count);

/**
 * Allocate space for an object with given size.
 *
 * @param count The size of the object in bytes.
 * @return Pointer to allocated space.
 */
void* operator new(size_t count);

/**
 * Placement new overload
 *
 * @param count The size of the object in bytes.
 * @param ptr The pointer to the already allocated memory.
 * @return ptr.
 */
void* operator new(size_t count, void* ptr);

/**
 * Frees a pointer allocated via a new[] call.
 *
 * @param ptr The pointer to free.
 */
void operator delete[](void* ptr);

/**
 * Frees a pointer allocated via a new[] call.
 *
 * @param ptr The pointer to free.
 * @param count Unused. Required for compilation.
 */

void operator delete[](void* ptr, size_t count);

/**
 * Frees a pointer allocated via a new call.
 *
 * @param ptr The pointer to free.
 * @param count Unused. Required for compilation.
 */
void operator delete(void* ptr, size_t count);
